% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mmBPFA_sampler.R
\name{mmBPFA_sampler}
\alias{mmBPFA_sampler}
\title{mmBPFA Gibbs sampler function}
\usage{
mmBPFA_sampler(
  dat,
  mode,
  share_noise = FALSE,
  K_start = 100,
  pre_sparse = 100,
  warmup = 1000,
  iter = 5000,
  thin = 5,
  chains = 1,
  parallel = TRUE,
  n_cores = 1,
  seed = 101473,
  benchmark = FALSE
)
}
\arguments{
\item{dat}{Data matrix.}

\item{mode}{Sets the type of margins for the simulated data. Must be one of "fixed", "multi" or "mixed." Default is "fixed."}

\item{share_noise}{Boolean indicating whether to sample the d hyperparameter for the factor precision draws. Setting to TRUE allows for more accurate dimension-varying precisions but takes longer to mix. Default is FALSE.}

\item{K_start}{Number of dimensions K to initialize sampler with. Default is 100.}

\item{pre_sparse}{Number of iterations sampler should take prior to turning on the beta-process prior. A minimum of 100 is suggested as a default to improve mixing and avoid the posterior dimensionality from collapsing to zero.}

\item{warmup}{Number of burnin iterations. Default 1000.}

\item{iter}{Number of posterior draws. 1000 draws usually suffices if runtime is an issue. Default is 5000.}

\item{thin}{Indicates how often posterior draws should be stored. Simulations suggest autocorrelation is present up to 5 lags, but tapers off at around 3. Defaults to 5 to minimize autocorrelation.}

\item{chains}{Number of chains to run. Implementation currently only allows for a single chain. Default is 1.}

\item{parallel}{Boolean indicating whether to use parallel processing for multiple chain runs.}

\item{n_cores}{Number of cores to use for parallel chain runs.}

\item{seed}{Random seed.}

\item{benchmark}{Boolean indicating whether to return benchmark timings of each sampling step. Primarily used for development purposes if user wants to further optimize the sampler for improved runtime. Default is FALSE.}
}
\value{
S3 object of class \code{bpfa.results} containing log-likelihoods, number of sampled dimensions at each step, and the posterior draws.
}
\description{
\code{mmBPFA_sampler} is the primary functional interface for the mmBPFA package.
The sampler estimates a latent posterior distribution from the data using a Gibbs sampling procedure.
Each conditional sampling step is written in C++ for improved sampling speed.
}
